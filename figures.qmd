---
title: "figures"
author: "Kun GUO (kguo@geo.ecnu.edu.cn)"
date: 2023/11
format: html
editor_options: 
  chunk_output_type: console
---
# Fig.1, Fig.3 and Fig.S4 were generated using Adobe illustrator
# Fig.2 phylogenetic tree
```{r}
library(tidytree)
library(ggtree)
library(ggtreeExtra)
library(ggnewscale)
nodeid.tbl_tree <- utils::getFromNamespace("nodeid.tbl_tree", "tidytree")
rootnode.tbl_tree <- utils::getFromNamespace("rootnode.tbl_tree", "tidytree")
offspring.tbl_tree <- utils::getFromNamespace("offspring.tbl_tree", "tidytree")
offspring.tbl_tree_item <- utils::getFromNamespace(".offspring.tbl_tree_item", "tidytree")
child.tbl_tree <- utils::getFromNamespace("child.tbl_tree", "tidytree")
parent.tbl_tree <- utils::getFromNamespace("parent.tbl_tree", "tidytree")

######################
# holoploid.tree
p <-ggtree(holoploid.tree,  branch.length='branch.length', layout="fan", size=0.001, open.angle = 5)

#the top 20 order
top20 <- fam2order %>% 
  group_by(order) %>% 
  summarise(n=n()) %>% 
  arrange(desc(n)) %>% 
  top_n(20) %>% 
  pull(order)

fam2order1 <- fam2order %>% 
  mutate(grp = ifelse(order %in% top20, order, "others") ) %>% 
  mutate(grp = factor(grp, levels = top20)) 


top20.df <- as_data_frame(holoploid.tree) %>% 
  filter(label %in% holoploid.tree$tip.label) %>% 
  left_join(fam2order1, by = c("label" = "taxon")) %>% 
  filter(order %in% top20) %>% 
  nest_by(grp) %>% 
  # find nodes for tip_labels
  mutate(mrca = getMRCA(holoploid.tree, data$label))

p1 <- p+
  new_scale_fill()+
  geom_highlight(aes(node = mrca, fill = grp), data = top20.df |> arrange(mrca),  alpha= 0.2, size = 0.05, extend = 0, align = "both")+
  scale_fill_manual(values = rep(c("#002f70", "#5f1415"), 10), na.value = NA)

################
order.txt <- fam2order %>% 
  filter(order %in% top20) %>% 
  group_by(order) %>% 
  mutate(n=1:n()) %>% 
  filter(n==round(median(n))) %>% 
  mutate(order = factor(order, levels = top20))

# taxon with largest native range size
top.natrng <- holoploid.df %>% 
  select(TPL_name, nat.rng) %>% 
  left_join(fam2order, by = c("TPL_name"="taxon")) %>% 
  filter(order %in% top20) %>% 
  group_by(order) %>% 
  filter(nat.rng == max(nat.rng)) %>% 
  distinct(order, .keep_all = T) %>% 
  mutate(order = factor(order, levels = top20)) %>% 
  arrange(order) %>% 
  mutate(lab = order) %>% 
  mutate(lab = fct_inorder(lab))

cladelabels <- map2(top20.df$mrca, top20.df$grp, function(x, y){
  geom_cladelabel(node = x, label = y, 
                  barsize = NA, 
                  offset.text =-100, hjust = 0.5, 
                  angle = "auto", align = T,
                  horizontal = F)
  
})

p2 <- p1 + 
  cladelabels +
  theme(legend.position = "none")+
  new_scale_fill()
# p2


p3 <- p2 +
  geom_fruit(data=holoploid.df, geom=geom_bar,
             mapping=aes(y=TPL_name, x=1, fill=status2),
             color = NA,
             stat = "identity",
             pwidth=0.04,
             offset = 0.001
             # axis.params = list(axis = "x",
             #                    text.size = 0, 
             #                    line.size =0,
             #                    scale_x_continuous(expand = c(0, 0)),
             #                    title = "stage", title.size = 6)
  )+
  #scale_color_manual(values = c("native"="gray", "naturalized" = "804e21", "invasive" = "#f39700"))
  scale_fill_manual(values = c("native"="gray", "naturalized" = "#2297e6", "invasive" = "#f39700"),
                    guide=guide_legend(keywidth=0.5, keyheight=0.5, ncol =1)
  )


# add holoploid
p4 <- p3 +
  #new_scale_fill()+
  geom_fruit(data=holoploid.df %>% mutate(holoploid = ifelse(holoploid>30, 50, holoploid)),
             geom=geom_bar,
             mapping=aes(y=TPL_name,  x = sqrt(holoploid)),
             fill = "#9c827f",
             color = NA,
             stat = "identity",
             pwidth=0.1,
             offset = 0.001
  )

# add csr
csr.df <- csr.f %>% 
  mutate(TPL_name = str_replace(TPL_name, " ", "_")) %>% 
  right_join(holoploid.df[, "TPL_name", drop=F], by = "TPL_name") %>% 
  pivot_longer(cols = c_score:r_score, names_to = "csr", values_to = "csr.val") %>% 
  mutate(csr = factor(csr, levels = c("c_score", "s_score", "r_score")))

p5 <-  p4 +
  new_scale_fill()+
  geom_fruit(data=csr.df, geom=geom_bar,
             mapping=aes(y=TPL_name, x = csr.val, fill = csr),
             color = NA,
             stat = "identity",
             pwidth=0.15,
             offset = 0.001
  )+
  scale_fill_manual(values = c("c_score"= alpha("#D55343", 0.8), 
                               "s_score" =  "#93C651", 
                               "r_score" = "#9C43D5"  ),
                    guide=guide_legend(keywidth=0.5, keyheight=0.5, ncol =1)
  )



# add ecouse
p6 <- p5 +
  new_scale_fill()+
  geom_fruit(data=holoploid.df, geom=geom_bar,
             mapping=aes(y=TPL_name, x=ecouse.sum),
             fill ="#dba733",
             color = NA, 
             stat = "identity",
             pwidth=0.1,
             offset = 0.001
  )



# add nat.range
p7 <- p6 +
  new_scale_fill()+
  geom_fruit(data=holoploid.df, geom=geom_bar,
             mapping=aes(y=TPL_name, x=sqrt(nat.rng)),
             color = NA,
             fill= "#1cb06b",
             stat = "identity",
             pwidth=0.1,
             offset = 0.001
  )+
  # theme(legend.position = c(0.4, .5),
  #     legend.background = element_blank()
  #     )
  theme(legend.position = "none")


pdf("./figures/Fig.2.pdf", height = 10, width =10)
p7
dev.off()

```



# Fig.S1-3 summary of SEM results using holoploid-focused data
```{r}
library(showtext)
showtext_auto()
num_fmt <- function(x, k){
  tmp <- 10^(-(k+1))*5
  ifelse(abs(x)<tmp, 
         round(x, digits = k+1) |> format(nsmall = k+1) |> trimws(),
         round(x, digits = k) |> format(nsmall = k) |> trimws()
         )
}
holoploid.mod.p1$Estimate |> num_fmt(2)
gm.p <- holoploid.mod.p1 |> 
  rename(lower.ci = CI.Lower, upper.ci = CI.Upper) |> 
  mutate(resp = fct_inorder(resp)) |> 
  mutate(csr = factor(csr, levels = c("c_score", "s_score", "r_score"))) |> 
  mutate(path = factor(path, levels = c( "ind_holoploid","natzrng_holoploid", "insrng_holoploid",
                                         "natrng_holoploid",
                                         "cscore_holoploid", "sscore_holoploid", "rscore_holoploid",
                                         "ecousesum_holoploid",
                                         "natrng_c_score", "natrng_s_score", "natrng_r_score",
                                         "ecousesum_c_score","ecousesum_s_score", "ecousesum_r_score",
                                         "ecousesum_nat.rng",
                                         "ind_nat.rng", "natzrng_nat.rng", "insrng_nat.rng",
                                         "ind_c_score", "ind_s_score", "ind_r_score", 
                                         "natzrng_c_score", "natzrng_s_score", "natzrng_r_score",
                                         "insrng_c_score", "insrng_s_score", "insrng_r_score",
                                         "ind_ecouse.sum",
                                         "natzrng_ecouse.sum", "insrng_ecouse.sum","insrng_natz.rng"
                                          ) |> rev() )) |> 
  # labels
  mutate(lab = paste0(num_fmt(Estimate, 2),
                      " [",
                      num_fmt(lower.ci, 2),
                      ", ",
                      num_fmt(upper.ci, 2),
                      "], ",
                      ifelse(Estimate <0, "P<i><sub>est<0</sub></i>=", "P<i><sub>est>0</sub></i>="), 
                      num_fmt(Post.Prob, 3)
                      )) |> 
  mutate(sig = case_when((Estimate > 0 & Post.Prob > 0.95) ~ "pos",
                         (Estimate < 0 & Post.Prob > 0.95) ~ "neg",
                         .default = "non_sig"
                         )) |> 
  mutate(lab.p = paste0(ifelse(Estimate <0, "P<i><sub>est<0</sub></i>=", "P<i><sub>est>0</sub></i>="), 
                        num_fmt(Post.Prob, 3))) |> 
  (\(d) split(d, d$resp))() |> 
  map(function(df){
    tmp <- letters[1:3]
    p <- df |> 
    ggplot(aes(x=path, y=Estimate,  color = sig))+
    geom_hline(yintercept = 0, linetype = "dashed")+
    geom_point(size = 2.5, aes(shape = sig))+
    geom_errorbar(aes(ymin =lower.ci, ymax = upper.ci), width=0.4)+
    # labels
    geom_richtext(aes(x=path, y= upper.ci, label = lab, color = sig), 
                  fill = NA, label.color = NA, #remove background and outline
                  size = 3, 
                  hjust = 0,
                  show.legend = F)+
    scale_color_manual(values=c("pos" = "#0e6eb8", "neg" = "#e6000d", "non_sig" = "#7c7c7c" ))+
    scale_x_discrete(labels = c("ind_holoploid" = "holoploid_gs \u2192 NatInd", 
                                "insrng_holoploid" = "holoploid_gs \u2192 InsExt",
                                "natrng_holoploid" = "holoploid_gs \u2192 native_rng",
                                "cscore_holoploid"= "holoploid_gs \u2192 C-score", 
                                "sscore_holoploid"= "holoploid_gs \u2192 S-score",
                                "rscore_holoploid"= "holoploid_gs \u2192 R-score",
                                "ecousesum_holoploid"= "holoploid_gs \u2192 ecouse", 
                                "natrng_c_score" = "C-score \u2192 native_rng", 
                                "natrng_s_score" = "S-score \u2192 native_rng",
                                "natrng_r_score" = "R-score \u2192 native_rng",
                                "ecousesum_c_score" = "C-score \u2192 ecouse",
                                "ecousesum_s_score" = "S-score \u2192 ecouse", 
                                "ecousesum_r_score" = "R-score \u2192 ecouse", 
                                "ecousesum_nat.rng" = "native_rng \u2192 ecouse",
                                
                                "ind_c_score" = "C-score \u2192 NatInd", 
                                "ind_s_score" = "S-score \u2192 NatInd", 
                                "ind_r_score" = "R-score \u2192 NatInd", 
                                "ind_nat.rng" = "native_rng \u2192 NatInd", 
                                "ind_ecouse.sum" = "ecouse \u2192 NatInd", 
                                "insrng_c_score" = "C-score \u2192 InsExt",
                                "insrng_s_score" = "S-score \u2192 InsExt", 
                                "insrng_r_score" = "R-score \u2192 InsExt",
                                "insrng_nat.rng" = "native_rng \u2192 InsExt", 
                                "insrng_ecouse.sum" = "ecouse \u2192 InsExt",
                                "insrng_natz.rng" = "NatExt \u2192 InsExt",
                                "natzrng_holoploid" = "holoploid_gs \u2192 NatExt",
                                
                                "natzrng_nat.rng" = "native_rng \u2192 NatExt", 
                                "natzrng_ecouse.sum" = "ecouse \u2192 NatExt",
                                
                                "natzrng_c_score" = "C-score \u2192 NatExt",
                                "natzrng_s_score" = "S-score \u2192 NatExt", 
                                "natzrng_r_score" = "R-score \u2192 NatExt"
                                 ) |> as_labeller())+
    # add letters to each facet
    geom_text_repel(aes(x = Inf, y = -Inf, label = lab),
              data = data.frame(csr =  c("c_score", "s_score", "r_score") |> fct_inorder(), lab = tmp),
              show.legend = F, inherit.aes = F, hjust = -0.5, vjust = 1
              )+
    # scale_y_continuous(limits = c(-0.5, 1.5), breaks = seq(-0.5, 1.5, 0.5))+
    scale_shape_manual(values = c("pos" = 16, "neg" = 16, "non_sig" = 21)) +
    xlab("Path")+
    ylab("Standardized coefficients")+
    facet_grid(csr ~., scales = "free")+
    coord_flip()+
    theme_minimal()+
    theme(legend.position = "none")+
    theme(panel.grid = element_blank())+
    theme(axis.line = element_line(size = 0.5))+
    theme(axis.ticks = element_line(size = 0.5))+
    theme(strip.text = element_blank())+
    theme(plot.background = element_blank())
    
  }) #|> cowplot::plot_grid(plotlist = _, align = "h")

pdf("./figures/Fig.S1", width = 8, height =  7)
gm.p[[1]]
dev.off() 

pdf("./figures/Fig.S2", width = 8, height =  7)
gm.p[[2]]
dev.off() 

pdf("./figures/Fig.S3.pdf", width = 8, height =  9)
gm.p[[3]]
dev.off() 

```

# Fig.S5-7 summary of SEM results using monoploid-focused data
```{r}
gm.p1 <- monoploid.mod.p1 |> 
  rename(lower.ci = CI.Lower, upper.ci = CI.Upper) |> 
  mutate(resp = fct_inorder(resp)) |> 
  mutate(csr = factor(csr, levels = c("c_score", "s_score", "r_score"))) |> 
  mutate(path = factor(path, levels = c( "ind_monoploid","natzrng_monoploid", "insrng_monoploid",
                                         "natrng_monoploid",
                                         "cscore_monoploid", "sscore_monoploid", "rscore_monoploid",
                                         "ecousesum_monoploid",
                                         "natrng_c_score", "natrng_s_score", "natrng_r_score",
                                         "ecousesum_c_score","ecousesum_s_score", "ecousesum_r_score",
                                         "ecousesum_nat.rng",
                                         "ind_nat.rng", "natzrng_nat.rng", "insrng_nat.rng",
                                         "ind_c_score", "ind_s_score", "ind_r_score", 
                                         "natzrng_c_score", "natzrng_s_score", "natzrng_r_score",
                                         "insrng_c_score", "insrng_s_score", "insrng_r_score",
                                         "ind_ecouse.sum",
                                         "natzrng_ecouse.sum", "insrng_ecouse.sum","insrng_natz.rng"
                                          ) |> rev() )) |> 
  # labels
  mutate(lab = paste0(num_fmt(Estimate, 2),
                      " [",
                      num_fmt(lower.ci, 2),
                      ", ",
                      num_fmt(upper.ci, 2),
                      "], ",
                      ifelse(Estimate <0, "P<i><sub>est<0</sub></i>=", "P<i><sub>est>0</sub></i>="), 
                      num_fmt(Post.Prob, 3)
                      )) |> 
  mutate(sig = case_when((Estimate > 0 & Post.Prob > 0.95) ~ "pos",
                         (Estimate < 0 & Post.Prob > 0.95) ~ "neg",
                         .default = "non_sig"
                         )) |> 
  mutate(lab.p = paste0(ifelse(Estimate <0, "P<i><sub>est<0</sub></i>=", "P<i><sub>est>0</sub></i>="), 
                        num_fmt(Post.Prob, 3))) |> 
  (\(d) split(d, d$resp))() |> 
  map(function(df){
    tmp <- letters[1:3]
    p <- df |> 
    ggplot(aes(x=path, y=Estimate,  color = sig))+
    geom_hline(yintercept = 0, linetype = "dashed")+
    geom_point(size = 2.5, aes(shape = sig))+
    geom_errorbar(aes(ymin =lower.ci, ymax = upper.ci), width=0.4)+
    # labels
    geom_richtext(aes(x=path, y= upper.ci, label = lab, color = sig), 
                  fill = NA, label.color = NA, #remove background and outline
                  size = 3, 
                  hjust = 0,
                  show.legend = F)+
    scale_color_manual(values=c("pos" = "#0e6eb8", "neg" = "#e6000d", "non_sig" = "#7c7c7c" ))+
    scale_x_discrete(labels = c("ind_monoploid" = "monoploid_gs \u2192 NatInd", 
                                "insrng_monoploid" = "monoploid_gs \u2192 InsExt",
                                "natrng_monoploid" = "monoploid_gs \u2192 native_rng",
                                "cscore_monoploid"= "monoploid_gs \u2192 C-score", 
                                "sscore_monoploid"= "monoploid_gs \u2192 S-score",
                                "rscore_monoploid"= "monoploid_gs \u2192 R-score",
                                "ecousesum_monoploid"= "monoploid_gs \u2192 ecouse", 
                                "natrng_c_score" = "C-score \u2192 native_rng", 
                                "natrng_s_score" = "S-score \u2192 native_rng",
                                "natrng_r_score" = "R-score \u2192 native_rng",
                                "ecousesum_c_score" = "C-score \u2192 ecouse",
                                "ecousesum_s_score" = "S-score \u2192 ecouse", 
                                "ecousesum_r_score" = "R-score \u2192 ecouse", 
                                "ecousesum_nat.rng" = "native_rng \u2192 ecouse",
                                
                                "ind_c_score" = "C-score \u2192 NatInd", 
                                "ind_s_score" = "S-score \u2192 NatInd", 
                                "ind_r_score" = "R-score \u2192 NatInd", 
                                "ind_nat.rng" = "native_rng \u2192 NatInd", 
                                "ind_ecouse.sum" = "ecouse \u2192 NatInd", 
                                "insrng_c_score" = "C-score \u2192 InsExt",
                                "insrng_s_score" = "S-score \u2192 InsExt", 
                                "insrng_r_score" = "R-score \u2192 InsExt",
                                "insrng_nat.rng" = "native_rng \u2192 InsExt", 
                                "insrng_ecouse.sum" = "ecouse \u2192 InsExt",
                                "insrng_natz.rng" = "NatExt \u2192 InsExt",
                                "natzrng_monoploid" = "monoploid_gs \u2192 NatExt",
                                
                                "natzrng_nat.rng" = "native_rng \u2192 NatExt", 
                                "natzrng_ecouse.sum" = "ecouse \u2192 NatExt",
                                
                                "natzrng_c_score" = "C-score \u2192 NatExt",
                                "natzrng_s_score" = "S-score \u2192 NatExt", 
                                "natzrng_r_score" = "R-score \u2192 NatExt"
                                 ) |> as_labeller())+
    # add letters to each facet
    geom_text_repel(aes(x = Inf, y = -Inf, label = lab),
              data = data.frame(csr =  c("c_score", "s_score", "r_score") |> fct_inorder(), lab = tmp),
              show.legend = F, inherit.aes = F, hjust = -0.5, vjust = 1
              )+
    # scale_y_continuous(limits = c(-0.5, 1.5), breaks = seq(-0.5, 1.5, 0.5))+
    scale_shape_manual(values = c("pos" = 16, "neg" = 16, "non_sig" = 21)) +
    xlab("Path")+
    ylab("Standardized coefficients")+
    facet_grid(csr ~., scales = "free")+
    coord_flip()+
    theme_minimal()+
    theme(legend.position = "none")+
    theme(panel.grid = element_blank())+
    theme(axis.line = element_line(size = 0.5))+
    theme(axis.ticks = element_line(size = 0.5))+
    theme(strip.text = element_blank())+
    theme(plot.background = element_blank())
    
  })

pdf("./figures/Fig.S5", width = 8, height =  7)
gm.p1[[1]]
dev.off() 

pdf("./figures/Fig.S6", width = 8, height =  7)
gm.p1[[2]]
dev.off() 

pdf("./figures/Fig.S7.pdf", width = 8, height =  9)
gm.p1[[3]]
dev.off() 

```

